Archive member included to satisfy reference by file (symbol)

d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_divmodhi4.o)
                              PWM2/PWM2.o (__divmodhi4)
d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
                              D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o (exit)
d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
                              main.o (__tablejump2__)
d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
                              PWM1/PWM1.o (__do_copy_data)
d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_udivmodhi4.o)
                              d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

j                   0x2               PWM1/PWM1.o
i                   0x2               PWM1/PWM1.o
a                   0x2               PWM2/PWM2.o
P                   0x2               PWM2/PWM2.o

Discarded input sections

 .data          0x00000000        0x0 D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o
 .bss           0x00000000        0x0 D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o
 .text          0x00000000        0x0 ADC/ADC.o
 .data          0x00000000        0x0 ADC/ADC.o
 .bss           0x00000000        0x0 ADC/ADC.o
 .text          0x00000000        0x0 EEPROM/EEPROM.o
 .data          0x00000000        0x0 EEPROM/EEPROM.o
 .bss           0x00000000        0x0 EEPROM/EEPROM.o
 .text          0x00000000        0x0 main.o
 .data          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .bss.pos4      0x00000000        0x4 main.o
 .bss.pos3      0x00000000        0x4 main.o
 .bss.pos2      0x00000000        0x4 main.o
 .bss.pos1      0x00000000        0x4 main.o
 .bss.anterior1
                0x00000000        0x2 main.o
 .bss.mover     0x00000000        0x1 main.o
 .bss.activa4   0x00000000        0x2 main.o
 .text          0x00000000        0x0 PWM1/PWM1.o
 .data          0x00000000        0x0 PWM1/PWM1.o
 .bss           0x00000000        0x0 PWM1/PWM1.o
 .text          0x00000000        0x0 PWM2/PWM2.o
 .data          0x00000000        0x0 PWM2/PWM2.o
 .bss           0x00000000        0x0 PWM2/PWM2.o
 .bss.suma      0x00000000        0x1 PWM2/PWM2.o
 .text          0x00000000        0x0 UART/UART.o
 .data          0x00000000        0x0 UART/UART.o
 .bss           0x00000000        0x0 UART/UART.o
 .text.writeTextUART
                0x00000000       0x22 UART/UART.o
 .text.writeUART
                0x00000000        0xe UART/UART.o
 .text          0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_divmodhi4.o)
 .data          0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_divmodhi4.o)
 .bss           0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc   0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_divmodhi4.o)
 .text          0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .data          0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text          0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .data          0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .bss           0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text.libgcc.mul
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text.libgcc.prologue
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text          0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .data          0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .data          0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_udivmodhi4.o)
 .data          0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_udivmodhi4.o)
 .bss           0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_udivmodhi4.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00008000         xr
data             0x00800100         0x00000800         rw !x
eeprom           0x00810000         0x00000400         rw !x
fuse             0x00820000         0x00000003         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o
LOAD ADC/ADC.o
LOAD EEPROM/EEPROM.o
LOAD main.o
LOAD PWM1/PWM1.o
LOAD PWM2/PWM2.o
LOAD UART/UART.o
START GROUP
LOAD d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libm.a
END GROUP
START GROUP
LOAD d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a
LOAD d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libm.a
LOAD d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libc.a
LOAD D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5\libatmega328p.a
END GROUP
                0x00000000                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                [0x00800100]                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                [0x00008000]                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                [0x00000800]                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                [0x00000400]                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x00000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x00000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x00000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x00000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1e60
 *(.vectors)
 .vectors       0x00000000       0x68 D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.main
                0x00000068      0x1f8 main.o
                0x00000260                . = ALIGN (0x2)
                0x00000260                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000260        0x0 linker stubs
 *(.trampolines*)
                0x00000260                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x00000260                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000260                __ctors_start = .
 *(.ctors)
                0x00000260                __ctors_end = .
                0x00000260                __dtors_start = .
 *(.dtors)
                0x00000260                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000260        0x0 D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o
                0x00000260                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000260        0xc D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000026c       0x16 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
                0x0000026c                __do_copy_data
 .init4         0x00000282       0x10 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
                0x00000282                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000292        0x8 D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o
 *(.init9)
 *(.text)
 .text          0x0000029a        0x4 D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o
                0x0000029a                __vector_22
                0x0000029a                __vector_1
                0x0000029a                __vector_24
                0x0000029a                __vector_12
                0x0000029a                __bad_interrupt
                0x0000029a                __vector_6
                0x0000029a                __vector_3
                0x0000029a                __vector_23
                0x0000029a                __vector_25
                0x0000029a                __vector_11
                0x0000029a                __vector_13
                0x0000029a                __vector_17
                0x0000029a                __vector_19
                0x0000029a                __vector_7
                0x0000029a                __vector_5
                0x0000029a                __vector_4
                0x0000029a                __vector_9
                0x0000029a                __vector_2
                0x0000029a                __vector_15
                0x0000029a                __vector_8
                0x0000029a                __vector_14
                0x0000029a                __vector_10
                0x0000029a                __vector_16
                0x0000029a                __vector_20
                0x0000029e                . = ALIGN (0x2)
 *(.text.*)
 .text.initADC  0x0000029e       0x50 ADC/ADC.o
                0x0000029e                initADC
 .text.EEPROM_write
                0x000002ee       0x18 EEPROM/EEPROM.o
                0x000002ee                EEPROM_write
 .text.EEPROM_read
                0x00000306       0x14 EEPROM/EEPROM.o
                0x00000306                EEPROM_read
 .text.setup    0x0000031a       0x54 main.o
                0x0000031a                setup
 .text.main     0x0000036e     0x1726 main.o
                0x0000036e                main
 .text.__vector_21
                0x00001a94      0x15c main.o
                0x00001a94                __vector_21
 .text.__vector_18
                0x00001bf0       0x2c main.o
                0x00001bf0                __vector_18
 .text.channel  0x00001c1c       0x42 PWM1/PWM1.o
                0x00001c1c                channel
 .text.initFastPWM1
                0x00001c5e       0x4e PWM1/PWM1.o
                0x00001c5e                initFastPWM1
 .text.topValue
                0x00001cac       0x22 PWM1/PWM1.o
                0x00001cac                topValue
 .text.convertServo
                0x00001cce       0x5e PWM1/PWM1.o
                0x00001cce                convertServo
 .text.initFastPWM2
                0x00001d2c       0x34 PWM2/PWM2.o
                0x00001d2c                initFastPWM2
 .text.convertServo2
                0x00001d60       0x6a PWM2/PWM2.o
                0x00001d60                convertServo2
 .text.initUART9600
                0x00001dca       0x36 UART/UART.o
                0x00001dca                initUART9600
 .text.libgcc.div
                0x00001e00       0x28 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_divmodhi4.o)
                0x00001e00                _div
                0x00001e00                __divmodhi4
 .text.libgcc   0x00001e28        0xc d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
                0x00001e28                __tablejump2__
 .text.libgcc.div
                0x00001e34       0x28 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_udivmodhi4.o)
                0x00001e34                __udivmodhi4
                0x00001e5c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001e5c        0x0 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
                0x00001e5c                _exit
                0x00001e5c                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001e5c        0x4 d:/programas/microchip studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00001e60                _etext = .

.data           0x00800100        0x2 load address 0x00001e60
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 .data.topVal   0x00800100        0x2 PWM1/PWM1.o
                0x00800100                topVal
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x00800102                . = ALIGN (0x2)
                0x00800102                _edata = .
                0x00800102                PROVIDE (__data_end, .)

.bss            0x00800102       0x2b
                0x00800102                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.receivedChar
                0x00800102        0x1 main.o
                0x00800102                receivedChar
 .bss.sumar     0x00800103        0x2 main.o
                0x00800103                sumar
 .bss.rota1     0x00800105        0x2 main.o
                0x00800105                rota1
 .bss.rota      0x00800107        0x2 main.o
                0x00800107                rota
 .bss.codo1     0x00800109        0x2 main.o
                0x00800109                codo1
 .bss.codo      0x0080010b        0x2 main.o
                0x0080010b                codo
 .bss.brazo1    0x0080010d        0x2 main.o
                0x0080010d                brazo1
 .bss.brazo     0x0080010f        0x2 main.o
                0x0080010f                brazo
 .bss.garra1    0x00800111        0x2 main.o
                0x00800111                garra1
 .bss.garra     0x00800113        0x2 main.o
                0x00800113                garra
 .bss.moverr    0x00800115        0x2 main.o
                0x00800115                moverr
 .bss.activa5   0x00800117        0x2 main.o
                0x00800117                activa5
 .bss.samtf     0x00800119        0x2 main.o
                0x00800119                samtf
 .bss.activa3   0x0080011b        0x2 main.o
                0x0080011b                activa3
 .bss.estado    0x0080011d        0x2 main.o
                0x0080011d                estado
 .bss.activa2   0x0080011f        0x2 main.o
                0x0080011f                activa2
 .bss.activa    0x00800121        0x2 main.o
                0x00800121                activa
 .bss.caso      0x00800123        0x2 main.o
                0x00800123                caso
 *(COMMON)
 COMMON         0x00800125        0x4 PWM1/PWM1.o
                0x00800125                j
                0x00800127                i
 COMMON         0x00800129        0x4 PWM2/PWM2.o
                0x00800129                a
                0x0080012b                P
                0x0080012d                PROVIDE (__bss_end, .)
                0x00001e60                __data_load_start = LOADADDR (.data)
                0x00001e62                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080012d        0x0
                [!provide]                PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                PROVIDE (__noinit_end, .)
                0x0080012d                _end = .
                [!provide]                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x30 ADC/ADC.o
                                 0x31 (size before relaxing)
 .comment       0x00000030       0x31 EEPROM/EEPROM.o
 .comment       0x00000030       0x31 main.o
 .comment       0x00000030       0x31 PWM1/PWM1.o
 .comment       0x00000030       0x31 PWM2/PWM2.o
 .comment       0x00000030       0x31 UART/UART.o

.note.gnu.avr.deviceinfo
                0x00000000       0x40
 .note.gnu.avr.deviceinfo
                0x00000000       0x40 D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x110
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 ADC/ADC.o
 .debug_aranges
                0x00000020       0x28 EEPROM/EEPROM.o
 .debug_aranges
                0x00000048       0x38 main.o
 .debug_aranges
                0x00000080       0x38 PWM1/PWM1.o
 .debug_aranges
                0x000000b8       0x28 PWM2/PWM2.o
 .debug_aranges
                0x000000e0       0x30 UART/UART.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x2fb4
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000      0x5f4 D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o
 .debug_info    0x000005f4       0x82 ADC/ADC.o
 .debug_info    0x00000676       0xde EEPROM/EEPROM.o
 .debug_info    0x00000754     0x2504 main.o
 .debug_info    0x00002c58      0x16f PWM1/PWM1.o
 .debug_info    0x00002dc7       0xf8 PWM2/PWM2.o
 .debug_info    0x00002ebf       0xf5 UART/UART.o

.debug_abbrev   0x00000000      0xa23
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x5a2 D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o
 .debug_abbrev  0x000005a2       0x4f ADC/ADC.o
 .debug_abbrev  0x000005f1       0x8b EEPROM/EEPROM.o
 .debug_abbrev  0x0000067c      0x1b4 main.o
 .debug_abbrev  0x00000830       0xa2 PWM1/PWM1.o
 .debug_abbrev  0x000008d2       0x9a PWM2/PWM2.o
 .debug_abbrev  0x0000096c       0xb7 UART/UART.o

.debug_line     0x00000000     0x1c7c
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x00000000      0x134 D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o
 .debug_line    0x00000134       0xd6 ADC/ADC.o
 .debug_line    0x0000020a       0xee EEPROM/EEPROM.o
 .debug_line    0x000002f8     0x15e4 main.o
 .debug_line    0x000018dc      0x168 PWM1/PWM1.o
 .debug_line    0x00001a44      0x10c PWM2/PWM2.o
 .debug_line    0x00001b50      0x12c UART/UART.o

.debug_frame    0x00000000      0x1d8
 *(.debug_frame)
 .debug_frame   0x00000000       0x24 ADC/ADC.o
 .debug_frame   0x00000024       0x34 EEPROM/EEPROM.o
 .debug_frame   0x00000058       0xb4 main.o
 .debug_frame   0x0000010c       0x54 PWM1/PWM1.o
 .debug_frame   0x00000160       0x34 PWM2/PWM2.o
 .debug_frame   0x00000194       0x44 UART/UART.o

.debug_str      0x00000000      0x5ec
 *(.debug_str)
 .debug_str     0x00000000      0x208 D:/Programas/Microchip studio/7.0/Packs/Atmel/ATmega_DFP/2.1.506/gcc/dev/atmega328p/avr5/crtatmega328p.o
 .debug_str     0x00000208      0x169 ADC/ADC.o
                                0x19d (size before relaxing)
 .debug_str     0x00000371       0x46 EEPROM/EEPROM.o
                                0x1ce (size before relaxing)
 .debug_str     0x000003b7      0x18d main.o
                                0x33b (size before relaxing)
 .debug_str     0x00000544       0x48 PWM1/PWM1.o
                                0x204 (size before relaxing)
 .debug_str     0x0000058c       0x2a PWM2/PWM2.o
                                0x1d6 (size before relaxing)
 .debug_str     0x000005b6       0x36 UART/UART.o
                                0x1d9 (size before relaxing)

.debug_loc      0x00000000     0x13a1
 *(.debug_loc)
 .debug_loc     0x00000000       0x58 EEPROM/EEPROM.o
 .debug_loc     0x00000058     0x1154 main.o
 .debug_loc     0x000011ac      0x112 PWM1/PWM1.o
 .debug_loc     0x000012be       0x9c PWM2/PWM2.o
 .debug_loc     0x0000135a       0x47 UART/UART.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0xb0
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x10 ADC/ADC.o
 .debug_ranges  0x00000010       0x18 EEPROM/EEPROM.o
 .debug_ranges  0x00000028       0x28 main.o
 .debug_ranges  0x00000050       0x28 PWM1/PWM1.o
 .debug_ranges  0x00000078       0x18 PWM2/PWM2.o
 .debug_ranges  0x00000090       0x20 UART/UART.o

.debug_macro
 *(.debug_macro)
OUTPUT(Brazo.elf elf32-avr)
LOAD linker stubs
